{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["QuestionBlock","handleInfoValue","className","question","name","type","placeholder","errorMsg","onChange","e","QuestionRadio","value","id","htmlFor","Form","useState","nickname","email","phone","category","howYouKnow","feedback","info","setInfo","errors","setErrors","nicknameErr","emailErr","phoneErr","categoryErr","howYouKnowErr","target","onSubmit","result","validity","preventDefault","handleValidity","alert","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.218d7681.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nconst QuestionBlock = ({ handleInfoValue, className, question, name, type, placeholder, errorMsg }) => {\n  return (\n    <div className='block'>\n      <div className={className || 'question'}>{question}</div>\n      <div className='ans'>\n        <input\n          className='ans__input'\n          name={name}\n          type={type}\n          placeholder={placeholder}\n          onChange={(e) => handleInfoValue(e)} /></div>\n      <div className='error'>{errorMsg}</div>\n    </div>\n  )\n}\n\nconst QuestionRadio = ({ handleInfoValue, errorMsg }) => {\n  return (\n    <>\n      <div className='question'>報名類型 </div>\n      <div className='choice'>\n        <div>\n          <input type='radio'\n            name='category'\n            value='躺在床上用想像力實作'\n            id='bed'\n            onChange={(e) => handleInfoValue(e)} />\n          <label htmlFor='bed'>躺在床上用想像力實作</label>\n        </div>\n        <div>\n          <input type='radio'\n            name='category'\n            value='趴在地上滑手機找現成的'\n            id='floor'\n            onChange={(e) => handleInfoValue(e)} />\n          <label htmlFor='floor'>\n            趴在地上滑手機找現成的</label>\n          <div className='error'>{errorMsg}</div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst Form = () => {\n  const [info, setInfo] = useState({\n    nickname: '',\n    email: '',\n    phone: '',\n    category: '',\n    howYouKnow: '',\n    feedback: '',\n  })\n  const [errors, setErrors] = useState('')\n  const { nicknameErr, emailErr, phoneErr, categoryErr, howYouKnowErr } = errors\n  const handleValidity = (e) => {\n    let errors = {}\n    let validity = true\n    if (info.nickname === '') {\n      e.preventDefault()\n      validity = false\n      errors['nicknameErr'] = '請填寫暱稱'\n    }\n    if (info.email === '') {\n      e.preventDefault()\n      validity = false\n      errors['emailErr'] = '請填寫電子郵件'\n    }\n    if (info.phone === '') {\n      e.preventDefault()\n      validity = false\n      errors['phoneErr'] = '請填寫手機號碼'\n    }\n    if (info.category === '') {\n      e.preventDefault()\n      validity = false\n      errors['categoryErr'] = '請勾選'\n    }\n    if (info.howYouKnow === '') {\n      e.preventDefault()\n      validity = false\n      errors['howYouKnowErr'] = '請填寫此欄'\n    }\n    setErrors(errors)\n    return validity\n  }\n\n  const handleInfoValue = (e) => {\n    setInfo({ ...info, [e.target.name]: e.target.value })\n  }\n  const handleSubmit = (e) => {\n    const result = `\n    報名成功！\n    暱稱：${info.nickname}\n    電子郵件：${info.email}\n    手機號碼：${info.phone}\n    報名類型：${info.category}\n    如何知道活動：${info.howYouKnow}\n    其他：${info.feedback}`\n    if (handleValidity(e)) {\n      alert(result)\n    }\n  }\n  return (\n    <form className='form' onSubmit={handleSubmit}>\n      <h1>新拖延運動報名表單</h1>\n      <div className='info'>\n        <div>活動日期：2020/12/10 ~ 2020/12/11</div>\n        <div>活動地點：台北市大安區新生南路二段1號</div>\n      </div>\n      <div className='notice'>*必填</div>\n      <QuestionBlock\n        handleInfoValue={handleInfoValue}\n        question='暱稱'\n        name='nickname'\n        type='text'\n        placeholder='您的回答'\n        errorMsg={nicknameErr} />\n      <QuestionBlock\n        handleInfoValue={handleInfoValue}\n        question='電子郵件'\n        name='email'\n        type='email'\n        placeholder='您的電子郵件'\n        errorMsg={emailErr} />\n      <QuestionBlock\n        handleInfoValue={handleInfoValue}\n        question='手機號碼'\n        name='phone'\n        type='tel'\n        placeholder='您的手機號碼'\n        errorMsg={phoneErr} />\n      <QuestionRadio\n        handleInfoValue={handleInfoValue}\n        errorMsg={categoryErr} />\n      <QuestionBlock\n        handleInfoValue={handleInfoValue}\n        question='怎麼知道這個活動的？'\n        name='howYouKnow'\n        type='text'\n        placeholder='您的回答'\n        errorMsg={howYouKnowErr} />\n      <QuestionBlock\n        handleInfoValue={handleInfoValue}\n        className='other'\n        question='其他，對活動的一些建議'\n        name='feedback'\n        type='text'\n        placeholder='您的回答' />\n      <input\n        className='submit'\n        type='submit'\n        value='提交' />\n      <div className='reminder'>請勿透過表單送出您的密碼。</div>\n    </form>\n  )\n}\n\nconst Footer = () => {\n  return (\n    <div className='footer__bottom'>\n      © 2020 © Copyright. All rights Reserved.\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <>\n      <div className='container'>\n        <Form />\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}